// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Task rendering render with minimal Props 1`] = `
<Fragment>
  <UnlockModal
    id="unlockModal"
    onClick={[Function]}
  />
  <ForceUnlockModal
    id="forceUnlockModal"
    onClick={[Function]}
    selectedRowsLen={1}
  />
  <Grid
    bsClass="container"
    componentClass="div"
    fluid={false}
  >
    <Row
      bsClass="row"
      componentClass="div"
    >
      <TaskButtons
        action=""
        canEdit={false}
        cancelTaskRequest={[Function]}
        cancellable={false}
        dynflowEnableConsole={false}
        endedAt=""
        errors={Array []}
        externalId=""
        hasSubTasks={false}
        help=""
        id="test"
        output=""
        parentTask=""
        progress={0}
        result="error"
        resumable={false}
        resumeTaskRequest={[Function]}
        startAt=""
        startBefore=""
        startedAt=""
        state=""
        taskProgressToggle={[MockFunction]}
        taskReload={false}
        username=""
        usernamePath=""
      />
    </Row>
    <TaskInfo
      action=""
      canEdit={false}
      cancelTaskRequest={[Function]}
      cancellable={false}
      dynflowEnableConsole={false}
      endedAt=""
      errors={Array []}
      externalId=""
      hasSubTasks={false}
      help=""
      id="test"
      output=""
      parentTask=""
      progress={0}
      result="error"
      resumable={false}
      resumeTaskRequest={[Function]}
      startAt=""
      startBefore=""
      startedAt=""
      state=""
      taskProgressToggle={[MockFunction]}
      taskReload={false}
      username=""
      usernamePath=""
    />
  </Grid>
</Fragment>
`;

exports[`Task rendering render with some Props 1`] = `
<Fragment>
  <UnlockModal
    id="unlockModal"
    onClick={[Function]}
  />
  <ForceUnlockModal
    id="forceUnlockModal"
    onClick={[Function]}
    selectedRowsLen={1}
  />
  <Grid
    bsClass="container"
    componentClass="div"
    fluid={false}
  >
    <Row
      bsClass="row"
      componentClass="div"
    >
      <TaskButtons
        action=""
        canEdit={true}
        cancelTaskRequest={[Function]}
        cancellable={false}
        dynflowEnableConsole={true}
        endedAt=""
        errors={Array []}
        externalId=""
        hasSubTasks={true}
        help=""
        id="test"
        output=""
        parentTask="parent-id"
        progress={0}
        result="error"
        resumable={false}
        resumeTaskRequest={[Function]}
        startAt=""
        startBefore=""
        startedAt=""
        state="paused"
        status="RESOLVED"
        taskProgressToggle={[MockFunction]}
        taskReload={true}
        username=""
        usernamePath=""
      />
    </Row>
    <TaskInfo
      action=""
      canEdit={true}
      cancelTaskRequest={[Function]}
      cancellable={false}
      dynflowEnableConsole={true}
      endedAt=""
      errors={Array []}
      externalId=""
      hasSubTasks={true}
      help=""
      id="test"
      output=""
      parentTask="parent-id"
      progress={0}
      result="error"
      resumable={false}
      resumeTaskRequest={[Function]}
      startAt=""
      startBefore=""
      startedAt=""
      state="paused"
      status="RESOLVED"
      taskProgressToggle={[MockFunction]}
      taskReload={true}
      username=""
      usernamePath=""
    />
  </Grid>
</Fragment>
`;
