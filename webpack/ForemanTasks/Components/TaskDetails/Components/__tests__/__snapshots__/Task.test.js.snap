// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Task rendering render with some Props 1`] = `
<Fragment>
  <UnlockModal
    id="unlockModal"
    onClick={[Function]}
  />
  <ForceUnlockModal
    id="forceUnlockModal"
    onClick={[Function]}
    selectedRowsLen={1}
  />
  <Grid
    bsClass="container"
    componentClass="div"
    fluid={false}
  >
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        xs={12}
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="reload-button"
          disabled={false}
          hidden={false}
          onClick={[Function]}
        >
          <span
            className="glyphicon glyphicon-refresh spin"
          />
          Stop  auto-reloading
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="dynflow-button"
          disabled={false}
          href="/foreman_tasks/dynflow/"
        >
          Dynflow console
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="resume-button"
          disabled={true}
          onClick={[Function]}
        >
          Resume
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="cancel-button"
          disabled={true}
          onClick={[Function]}
        >
          Cancel
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="parent-button"
          disabled={false}
          href="/foreman_tasks/tasks/parent-id"
        >
          Parent task
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="subtask-button"
          disabled={false}
          href="/foreman_tasks/tasks/test/sub_tasks"
        >
          Sub tasks
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="unlock-button"
          disabled={false}
          onClick={[MockFunction]}
        >
          Unlock
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="force-unlock-button"
          disabled={false}
          onClick={[MockFunction]}
        >
          Force Unlock
        </Button>
      </Col>
    </Row>
    <TaskInfo
      action=""
      allowDangerousActions={true}
      cancelTaskRequest={[Function]}
      cancellable={false}
      dynflowEnableConsole={true}
      endedAt=""
      error={Array []}
      externalId=""
      hasSubTasks={true}
      help=""
      id="test"
      output=""
      parentTask="parent-id"
      progress={0}
      refetchTaskDetails={[Function]}
      result="error"
      resumable={false}
      resumeTaskRequest={[Function]}
      startAt=""
      startBefore=""
      startedAt=""
      state="paused"
      taskReload={true}
      taskReloadStart={[Function]}
      taskReloadStop={[Function]}
      timeoutId={null}
      username=""
      usernamePath=""
    />
  </Grid>
</Fragment>
`;

exports[`Task rendering render without Props 1`] = `
<Fragment>
  <UnlockModal
    id="unlockModal"
    onClick={[Function]}
  />
  <ForceUnlockModal
    id="forceUnlockModal"
    onClick={[Function]}
    selectedRowsLen={1}
  />
  <Grid
    bsClass="container"
    componentClass="div"
    fluid={false}
  >
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        xs={12}
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="reload-button"
          disabled={false}
          hidden={true}
          onClick={[Function]}
        >
          <span
            className="glyphicon glyphicon-refresh "
          />
          Start  auto-reloading
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="dynflow-button"
          disabled={true}
          href="/foreman_tasks/dynflow/"
        >
          Dynflow console
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="resume-button"
          disabled={true}
          onClick={[Function]}
        >
          Resume
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="small"
          bsStyle="default"
          className="cancel-button"
          disabled={true}
          onClick={[Function]}
        >
          Cancel
        </Button>
      </Col>
    </Row>
    <TaskInfo
      action=""
      allowDangerousActions={false}
      cancelTaskRequest={[Function]}
      cancellable={false}
      dynflowEnableConsole={false}
      endedAt=""
      error={Array []}
      externalId=""
      hasSubTasks={false}
      help=""
      id="test"
      output=""
      parentTask=""
      progress={0}
      refetchTaskDetails={[Function]}
      result="error"
      resumable={false}
      resumeTaskRequest={[Function]}
      startAt=""
      startBefore=""
      startedAt=""
      state=""
      taskReload={false}
      taskReloadStart={[Function]}
      taskReloadStop={[Function]}
      timeoutId={null}
      username=""
      usernamePath=""
    />
  </Grid>
</Fragment>
`;
